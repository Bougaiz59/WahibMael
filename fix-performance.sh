#!/bin/bash
# fix-performance.sh

echo "üîß Correction des probl√®mes de performance LinkerAI..."

# 1. Arr√™ter le serveur dev
echo "‚èπÔ∏è  Arr√™t du serveur de d√©veloppement..."
pkill -f "next dev" || true

# 2. Nettoyer compl√®tement
echo "üßπ Nettoyage complet..."
rm -rf .next
rm -rf node_modules/.cache
rm -rf node_modules/@supabase
rm -rf node_modules/.vite

# 3. Identifier les fichiers probl√©matiques
echo "üîç Recherche des imports Supabase probl√©matiques..."
echo "================================================"

# Lister TOUS les fichiers qui importent depuis @supabase
echo "üìã Fichiers utilisant @supabase:"
grep -r "from '@supabase" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" . 2>/dev/null | grep -v node_modules | cut -d: -f1 | sort | uniq

echo ""
echo "üìã Fichiers cr√©ant des clients Supabase:"
grep -r "createClient\s*(" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" . 2>/dev/null | grep -v node_modules | grep -v "lib/supabase"

# 4. V√©rifier lib/supabase.ts
echo ""
echo "üîç Contenu actuel de lib/supabase.ts:"
echo "================================================"
cat lib/supabase.ts

# 5. Cr√©er un client Supabase VRAIMENT singleton
echo ""
echo "‚ú® Cr√©ation d'un nouveau client Supabase singleton..."
cat > lib/supabase-singleton.ts << 'EOF'
import { createClient as createSupabaseClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!

// V√©rifier que nous sommes dans le navigateur
const isBrowser = typeof window !== 'undefined'

// Cr√©er une seule instance globale
let clientInstance: ReturnType<typeof createSupabaseClient> | null = null

export function createClient() {
  // Si l'instance existe d√©j√†, la retourner
  if (clientInstance) {
    return clientInstance
  }

  // Sinon, cr√©er une nouvelle instance
  clientInstance = createSupabaseClient(supabaseUrl, supabaseAnonKey, {
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true,
      storage: isBrowser ? window.localStorage : undefined,
    }
  })

  // Ajouter un log pour debug
  if (isBrowser) {
    console.log('[SUPABASE] Client singleton cr√©√©')
  }

  return clientInstance
}

// Export par d√©faut
export const supabase = createClient()
export default supabase
